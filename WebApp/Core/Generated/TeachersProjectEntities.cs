// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TeachersProjectEntities.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TeachersMicroservice {

  /// <summary>Holder for reflection information generated from TeachersProjectEntities.proto</summary>
  public static partial class TeachersProjectEntitiesReflection {

    #region Descriptor
    /// <summary>File descriptor for TeachersProjectEntities.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TeachersProjectEntitiesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1UZWFjaGVyc1Byb2plY3RFbnRpdGllcy5wcm90byImChJHZXRUZWFjaGVy",
            "c1JlcXVlc3QSEAoIY291cnNlSWQYASABKAkiOAoTR2V0VGVhY2hlcnNSZXNw",
            "b25zZRIhCgh0ZWFjaGVycxgBIAMoCzIPLlRlYWNoZXJNZXNzYWdlImcKDlRl",
            "YWNoZXJNZXNzYWdlEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDQoFbW90",
            "dG8YAyABKAkSEwoLeWVhck9mQmlydGgYBCABKAUSFwoPY2FyZWVyU3RhcnRZ",
            "ZWFyGAUgASgFQheqAhRUZWFjaGVyc01pY3Jvc2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TeachersMicroservice.GetTeachersRequest), global::TeachersMicroservice.GetTeachersRequest.Parser, new[]{ "CourseId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeachersMicroservice.GetTeachersResponse), global::TeachersMicroservice.GetTeachersResponse.Parser, new[]{ "Teachers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeachersMicroservice.TeacherMessage), global::TeachersMicroservice.TeacherMessage.Parser, new[]{ "Id", "Name", "Motto", "YearOfBirth", "CareerStartYear" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetTeachersRequest : pb::IMessage<GetTeachersRequest> {
    private static readonly pb::MessageParser<GetTeachersRequest> _parser = new pb::MessageParser<GetTeachersRequest>(() => new GetTeachersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTeachersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeachersMicroservice.TeachersProjectEntitiesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTeachersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTeachersRequest(GetTeachersRequest other) : this() {
      courseId_ = other.courseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTeachersRequest Clone() {
      return new GetTeachersRequest(this);
    }

    /// <summary>Field number for the "courseId" field.</summary>
    public const int CourseIdFieldNumber = 1;
    private string courseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CourseId {
      get { return courseId_; }
      set {
        courseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTeachersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTeachersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CourseId != other.CourseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CourseId.Length != 0) hash ^= CourseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CourseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CourseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CourseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CourseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTeachersRequest other) {
      if (other == null) {
        return;
      }
      if (other.CourseId.Length != 0) {
        CourseId = other.CourseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CourseId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTeachersResponse : pb::IMessage<GetTeachersResponse> {
    private static readonly pb::MessageParser<GetTeachersResponse> _parser = new pb::MessageParser<GetTeachersResponse>(() => new GetTeachersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTeachersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeachersMicroservice.TeachersProjectEntitiesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTeachersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTeachersResponse(GetTeachersResponse other) : this() {
      teachers_ = other.teachers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTeachersResponse Clone() {
      return new GetTeachersResponse(this);
    }

    /// <summary>Field number for the "teachers" field.</summary>
    public const int TeachersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TeachersMicroservice.TeacherMessage> _repeated_teachers_codec
        = pb::FieldCodec.ForMessage(10, global::TeachersMicroservice.TeacherMessage.Parser);
    private readonly pbc::RepeatedField<global::TeachersMicroservice.TeacherMessage> teachers_ = new pbc::RepeatedField<global::TeachersMicroservice.TeacherMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TeachersMicroservice.TeacherMessage> Teachers {
      get { return teachers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTeachersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTeachersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!teachers_.Equals(other.teachers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= teachers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      teachers_.WriteTo(output, _repeated_teachers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += teachers_.CalculateSize(_repeated_teachers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTeachersResponse other) {
      if (other == null) {
        return;
      }
      teachers_.Add(other.teachers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            teachers_.AddEntriesFrom(input, _repeated_teachers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeacherMessage : pb::IMessage<TeacherMessage> {
    private static readonly pb::MessageParser<TeacherMessage> _parser = new pb::MessageParser<TeacherMessage>(() => new TeacherMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeacherMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeachersMicroservice.TeachersProjectEntitiesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeacherMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeacherMessage(TeacherMessage other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      motto_ = other.motto_;
      yearOfBirth_ = other.yearOfBirth_;
      careerStartYear_ = other.careerStartYear_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeacherMessage Clone() {
      return new TeacherMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "motto" field.</summary>
    public const int MottoFieldNumber = 3;
    private string motto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Motto {
      get { return motto_; }
      set {
        motto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "yearOfBirth" field.</summary>
    public const int YearOfBirthFieldNumber = 4;
    private int yearOfBirth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int YearOfBirth {
      get { return yearOfBirth_; }
      set {
        yearOfBirth_ = value;
      }
    }

    /// <summary>Field number for the "careerStartYear" field.</summary>
    public const int CareerStartYearFieldNumber = 5;
    private int careerStartYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CareerStartYear {
      get { return careerStartYear_; }
      set {
        careerStartYear_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeacherMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeacherMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Motto != other.Motto) return false;
      if (YearOfBirth != other.YearOfBirth) return false;
      if (CareerStartYear != other.CareerStartYear) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Motto.Length != 0) hash ^= Motto.GetHashCode();
      if (YearOfBirth != 0) hash ^= YearOfBirth.GetHashCode();
      if (CareerStartYear != 0) hash ^= CareerStartYear.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Motto.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Motto);
      }
      if (YearOfBirth != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(YearOfBirth);
      }
      if (CareerStartYear != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CareerStartYear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Motto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Motto);
      }
      if (YearOfBirth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(YearOfBirth);
      }
      if (CareerStartYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CareerStartYear);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeacherMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Motto.Length != 0) {
        Motto = other.Motto;
      }
      if (other.YearOfBirth != 0) {
        YearOfBirth = other.YearOfBirth;
      }
      if (other.CareerStartYear != 0) {
        CareerStartYear = other.CareerStartYear;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Motto = input.ReadString();
            break;
          }
          case 32: {
            YearOfBirth = input.ReadInt32();
            break;
          }
          case 40: {
            CareerStartYear = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
